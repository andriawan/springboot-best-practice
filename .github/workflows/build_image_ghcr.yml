name: Build & Push Docker to GHCR

on:
  push:
    tags:
      - 'v*'
env:
  APP_NAME: ${{ vars.APP_NAME }}
  CERTS_PATH: './src/main/resources/certs'

jobs:
  docker:
    name: Build & Push Docker to GHCR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy Private and Public Keys
        run: |
          echo "${{ secrets.SAMPLE_PRIVATE_KEY }}" > ${CERTS_PATH}/private_key.pem
          echo "${{ secrets.SAMPLE_PUBLIC_KEY }}" > ${CERTS_PATH}/public_key.pem
          chmod 600 ${CERTS_PATH}/private_key.pem ${CERTS_PATH}/public_key.pem
          tree ${CERTS_PATH}

      - name: Get Git tag if exists
        id: vars
        run: |
          TAG=$(git describe --tags --exact-match 2>/dev/null || echo "")
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Set Docker tag
        id: docker_tag
        run: |
          if [ -z "${{ steps.vars.outputs.tag }}" ]; then
            echo "Docker tag is: latest"
            echo "tag=latest" >> $GITHUB_OUTPUT
          else
            TAG_CLEANED=$(echo "${{ steps.vars.outputs.tag }}" | sed 's/^v//')
            echo "Docker tag is: $TAG_CLEANED"
            echo "tag=$TAG_CLEANED" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/app/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.APP_NAME }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ env.APP_NAME }}:${{ steps.docker_tag.outputs.tag }}